version: '3.8'

services:
  api:
    build: .
    ports:
      - "8081:8081"
    networks:
      - my-networks
    depends_on:
      - mysql
      - redis
      - broker
      - elasticsearch

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cafeConnect
      MYSQL_USER: cafeConnect
      MYSQL_PASSWORD: cafeConnect123
    ports:
      - "3306:3306"
    networks:
      - my-networks
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:8.0
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - my-networks

  migration:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    depends_on:
      - mysql
    networks:
      - my-networks

  broker:
    image: apache/kafka:3.9.1
    container_name: broker
    networks:
      - my-networks
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  elasticsearch:
    image: elasticsearch:9.0.2
    container_name: elasticsearch
    networks:
      - my-networks
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    depends_on:
      - mysql
      - redis
      - broker
    networks:
      - my-networks

networks:
  my-networks:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  elasticsearch_data: